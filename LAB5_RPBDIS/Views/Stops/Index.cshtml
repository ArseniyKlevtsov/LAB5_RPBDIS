@using RailwayTrafficSolution.ViewModels.StopViewModels;
@model StopIndexViewModel
@{
    ViewData["Title"] = "Остановки";
}

<h1>Остановки</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Добавить новую запись</a>
</p>
<form method="get" class="bg-primary bg-gradient p-2 rounded-3" style="--bs-bg-opacity: .3;">
    <div class="form-group">
        <h4>Фильтрация</h4>
    </div>
    <div class="form-group">
        <label>Название: </label>
        <input name="name" value="@Model.FilterViewModel.SelectedName" class="form-control" />
    </div>
    <p></p>
    <div class="form-group">
        <label>Является ЖД станцией?: </label>
        <select name="isRailwayStation" asp-items="Model.FilterViewModel.IsRailwayStationList" class="form-control"></select>
    </div>
    <p></p>
    <div class="form-group">
        <label>Есть команата ожидания?: </label>
        <select name="hasWaitingRoom" asp-items="Model.FilterViewModel.HasWaitingRoomList" class="form-control"></select>
    </div>
    <p></p>
    <input type="submit" value="Применить" class="btn btn-primary" />
    <a asp-action="Index" class="btn btn-primary">Сбросить фильтр</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                    asp-route-sortOrder="@(Model.SortViewModel.NameSort)"
                    asp-route-name="@(Model.FilterViewModel.SelectedName)"
                    asp-route-isRailwayStation="@(Model.FilterViewModel.SelectedIsRailwayStation)"
                    asp-route-hasWaitingRoom="@(Model.FilterViewModel.SelectedHasWaitingRoom)">
                    Название
                </a>
            </th>
            <th>
                Является ЖД станцией?
            </th>
            <th>
                Есть команата ожидания?
            </th>
            @if (User.IsInRole("MainAdmin") || User.IsInRole("Admin"))
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Stops)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (item.IsRailwayStation ==true)
                    {
                        <p>Да</p>
                    }
                    else
                    {
                        <p>Нет</p>
                    }
                </td>
                <td>
                    @if (item.HasWaitingRoom == true)
                    {
                        <p>Да</p>
                    }
                    else
                    {
                        <p>Нет</p>
                    }
                </td>
                @if (User.IsInRole("MainAdmin") || User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.StopId">Изменить</a> |
                        <a asp-action="Details" asp-route-id="@item.StopId">Детали</a> |
                        <a asp-action="Delete" asp-route-id="@item.StopId">Удалить</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index"
       asp-route-page="@(1)"
       asp-route-name="@(Model.FilterViewModel.SelectedName)"
       asp-route-isRailwayStation="@(Model.FilterViewModel.SelectedIsRailwayStation)"
       asp-route-hasWaitingRoom="@(Model.FilterViewModel.SelectedHasWaitingRoom)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-primary">
        1
    </a>
    <button type="button" class="btn btn-lg btn-primary" disabled>@Model.PageViewModel.PageNumber</button>
    @if (Model.PageViewModel.TotalPages != 0)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.TotalPages)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-isRailwayStation="@(Model.FilterViewModel.SelectedIsRailwayStation)"
           asp-route-hasWaitingRoom="@(Model.FilterViewModel.SelectedHasWaitingRoom)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-primary">
            @Model.PageViewModel.TotalPages
        </a>
    }
</div>
<p></p>
<div>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-isRailwayStation="@(Model.FilterViewModel.SelectedIsRailwayStation)"
           asp-route-hasWaitingRoom="@(Model.FilterViewModel.SelectedHasWaitingRoom)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-primary">
            &lt;
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-isRailwayStation="@(Model.FilterViewModel.SelectedIsRailwayStation)"
           asp-route-hasWaitingRoom="@(Model.FilterViewModel.SelectedHasWaitingRoom)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-primary">
            &gt;
        </a>
    }
</div>